#==============================================================================
# ★ トロッコ搭乗
#------------------------------------------------------------------------------
# ver. 1.0.2
# by nz_prism
# https://github.com/nz-prism/VXAce-Scripts/tree/master/Cart
#------------------------------------------------------------------------------
# ■ 導入方法
# 1. スクリプトエディタにて、「▼ 素材」の「( ここに追加 )」以下に新規セクション
#    を挿入してください。
# 2. 1 のセクションにこのスクリプト全体を貼り付けてください。
# 3. タイルセットの設定をしてください（詳細は下記を参照）。
# 4. 任意のマップにレールタイルを敷いてください。始点と終点は必ず用意しなければ
#    なりませんが、そのほかは自由に配置することができます。
# 5. テストマップのトロッコイベント始点を、 4 のレール始点にコピー＆ペーストして
#    ください。
# 6. 5 のイベントの 1 ページ目のグラフィックの向きをレールに合わせてください。
# 7. テストマップのトロッコイベント終点を、 4 のレール終点にコピー＆ペーストして
#    ください。
# 8. 7 のイベントの 2 ページ目のグラフィックの向きをレールに合わせてください。
# 9. 始点トロッコを調べればプレイヤーキャラクターがトロッコに乗って走り出します。
#    終点に到着すると停止します。
#
# ■ タイルセットの設定
# 　デフォルトのタイルセットの、ID 4 「ダンジョン」の C タブにレール状のタイル群
# があります。このタイルの「通行: 4 方向」を、テストプロジェクトと同じように設定
# すれば設定完了です。タイル素材がデフォルトと変わらなければ、テストプロジェクト
# からコピー＆ペーストするのがもっとも手軽です。
# なお「ツクールシリーズ素材集　和」同梱のタイルセット素材にも、レール状のタイル
# セット素材が存在します。この素材を使用する場合こちらも同様に設定すれば、和素材
# レールでもトロッコを走らせることが可能です。
#
# ■ トロッコイベントについて
# 　テストマップには始点、終点ともに 2 種類のトロッコイベントが存在します。これ
# は隊列歩行に合わせたオプションです。詳細はイベント内の注釈をお読みください。
#------------------------------------------------------------------------------
# 本素材はMITライセンスにてリリースされています。
# https://opensource.org/licenses/mit-license.php
#------------------------------------------------------------------------------
# 2012/09/17 1.0.2 トロッコ搭乗時の表示をより自然になるように修正
# 2012/09/10 1.0.1 大型キャラの表示がおかしくなる不具合を修正
# 2012/07/27 1.0.0 公開
#==============================================================================

class Game_CharacterBase
  #--------------------------------------------------------------------------
  # ★ 公開インスタンス変数
  #--------------------------------------------------------------------------
  attr_accessor :on_cart
  #--------------------------------------------------------------------------
  # ○ 公開メンバ変数の初期化
  #--------------------------------------------------------------------------
  alias :nzprism_cart_init_public_members :init_public_members
  def init_public_members
    nzprism_cart_init_public_members
    @on_cart = false
  end
  #--------------------------------------------------------------------------
  # ★ 道に沿って前進
  #--------------------------------------------------------------------------
  def move_along
    old_x = @x
    old_y = @y
    ary = [2, 4, 6, 8]
    ary.delete(@direction)
    ary.delete(10 - @direction)
    move_forward
    move_straight(ary[0]) if (@x == old_x) and (@y == old_y)
    move_straight(ary[1]) if (@x == old_x) and (@y == old_y)
  end
end

class Game_Character
  #--------------------------------------------------------------------------
  # ★ 公開インスタンス変数
  #--------------------------------------------------------------------------
  attr_writer :move_route_forcing
end

class Sprite_Character
  #--------------------------------------------------------------------------
  # ★ 公開インスタンス変数
  #--------------------------------------------------------------------------
  attr_accessor :cart_sprite
  #--------------------------------------------------------------------------
  # ○ 解放
  #--------------------------------------------------------------------------
  alias :nzprism_cart_dispose :dispose
  def dispose
    end_cart
    nzprism_cart_dispose
  end
  #--------------------------------------------------------------------------
  # ○ フレーム更新
  #--------------------------------------------------------------------------
  alias :nzprism_cart_update :update
  def update
    nzprism_cart_update
    update_cart
  end
  #--------------------------------------------------------------------------
  # ○ 転送元矩形の更新
  #--------------------------------------------------------------------------
  alias :nzprism_cart_update_src_rect :update_src_rect
  def update_src_rect
    if @character.on_cart
      if @tile_id == 0
        index = @character.character_index
        pattern = @character.pattern < 3 ? @character.pattern : 1
        sx = (index % 4 * 3 + pattern) * @cw
        sy = (index / 4 * 4 + (@character.direction - 2) / 2) * @ch
        self.src_rect.set(sx, sy, @cw, @ch - 14)
      end
    else
      nzprism_cart_update_src_rect
    end
  end
  #--------------------------------------------------------------------------
  # ○ 新しいエフェクトの設定
  #--------------------------------------------------------------------------
  alias :nzprism_cart_setup_new_effect :setup_new_effect
  def setup_new_effect
    nzprism_cart_setup_new_effect
    start_cart if !@cart_sprite && @character.on_cart
  end
  #--------------------------------------------------------------------------
  # ★ トロッコ表示の開始
  #--------------------------------------------------------------------------
  def start_cart
    @cart_sprite = ::Sprite.new(viewport)
    @cart_sprite.bitmap = Cache.character("Vehicle")
    @cart_sprite.ox = 16
    @cart_sprite.oy = 32
    update_cart
  end
  #--------------------------------------------------------------------------
  # ★ トロッコの更新
  #--------------------------------------------------------------------------
  def update_cart
    if @character.on_cart and @cart_sprite
      @cart_sprite.x = x
      @cart_sprite.y = y
      pattern = @character.pattern < 3 ? @character.pattern : 1
      sx = (6 + pattern) * 32
      sy = (4 + (@character.direction - 2) / 2) * 32
      @cart_sprite.src_rect.set(sx, sy, 32, 32)
    else
      end_cart
    end
  end
  #--------------------------------------------------------------------------
  # ★ トロッコの終了
  #--------------------------------------------------------------------------
  def end_cart
    if @cart_sprite
      @cart_sprite.dispose
      @cart_sprite = nil
    end
  end
end
